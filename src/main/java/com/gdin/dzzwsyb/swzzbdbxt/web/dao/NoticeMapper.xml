<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdin.dzzwsyb.swzzbdbxt.web.dao.NoticeMapper">
	<resultMap id="BaseResultMap" type="com.gdin.dzzwsyb.swzzbdbxt.web.model.Notice">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="target_id" jdbcType="VARCHAR" property="targetId" />
		<result column="target_type" jdbcType="INTEGER" property="targetType" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="is_read" jdbcType="INTEGER" property="isRead" />
	</resultMap>
	<resultMap id="BaseCountResultMap" type="com.gdin.dzzwsyb.swzzbdbxt.web.model.NoticeCount">
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="onetype" jdbcType="INTEGER" property="oneType" />
		<result column="unread" jdbcType="INTEGER" property="unRead" />
	</resultMap>
	<resultMap id="statisticsMap" type="com.gdin.dzzwsyb.swzzbdbxt.web.model.Statistics">
		<result column="total" jdbcType="INTEGER" property="total" />
		<result column="onwork" jdbcType="INTEGER" property="onwork" />
		<result column="stop" jdbcType="INTEGER" property="stop" />
		<result column="month" jdbcType="INTEGER" property="month" />
		<result column="week" jdbcType="INTEGER" property="week" />
		<result column="overtime" jdbcType="INTEGER" property="overtime" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, user_id, type, target_id, target_type, create_time, is_read
	</sql>
	<select id="selectByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.NoticeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from notice
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from notice
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.NoticeExample">
		delete from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.Notice">
		insert into notice (id, user_id, type,
		target_id, target_type, create_time,
		is_read)
		values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{type,jdbcType=INTEGER},
		#{targetId,jdbcType=VARCHAR}, #{targetType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{isRead,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.Notice">
		insert into notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="targetId != null">
				target_id,
			</if>
			<if test="targetType != null">
				target_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="isRead != null">
				is_read,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="targetId != null">
				#{targetId,jdbcType=VARCHAR},
			</if>
			<if test="targetType != null">
				#{targetType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isRead != null">
				#{isRead,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.NoticeExample"
		resultType="java.lang.Long">
		select count(*) from notice
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update notice
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.targetId != null">
				target_id = #{record.targetId,jdbcType=VARCHAR},
			</if>
			<if test="record.targetType != null">
				target_type = #{record.targetType,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.isRead != null">
				is_read = #{record.isRead,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update notice
		set id = #{record.id,jdbcType=BIGINT},
		user_id = #{record.userId,jdbcType=BIGINT},
		type = #{record.type,jdbcType=INTEGER},
		target_id = #{record.targetId,jdbcType=VARCHAR},
		target_type = #{record.targetType,jdbcType=INTEGER},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		is_read = #{record.isRead,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.Notice">
		update notice
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="targetId != null">
				target_id = #{targetId,jdbcType=VARCHAR},
			</if>
			<if test="targetType != null">
				target_type = #{targetType,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isRead != null">
				is_read = #{isRead,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.Notice">
		update notice
		set user_id = #{userId,jdbcType=BIGINT},
		type = #{type,jdbcType=INTEGER},
		target_id = #{targetId,jdbcType=VARCHAR},
		target_type = #{targetType,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		is_read = #{isRead,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 页面上的提醒功能 -->
	<select id="countNotice" parameterType="java.lang.Long" 
		resultMap="BaseCountResultMap">
			select t1.type,  onetype, unread from
				(select type, count(1) onetype from notice where user_id = #{userId,jdbcType=BIGINT} GROUP BY type ) t1
					LEFT OUTER JOIN
						(select type, count(1) unread  from notice where user_id = #{userId,jdbcType=BIGINT} and is_read=1  GROUP BY type ) t2
							on t1.type=t2.type    order by t1.type 			
			
	</select>
	
	<select id="msgStatistics" resultMap="statisticsMap">
			select
				sum(case when status &lt;&gt; 0 then 1 else 0 end) as total,
				sum(case when status &gt; 0 and status &lt; 3 then 1 else 0 end) as onwork,
				sum(case when status &gt; 2 then 1 else 0 end) as stop,
				sum(case when TO_DAYS(now() + INTERVAL 1 MONTH) &gt;= TO_DAYS(limit_time) and status = 1 then 1 else 0 end) as month,
				sum(case when TO_DAYS(now() + INTERVAL 1 WEEK) &gt;= TO_DAYS(limit_time) and status = 1 then 1 else 0 end) as week,
				sum(case when status = 2 then 1 else 0 end) as overtime
			from 
				(select * from sponsor_count where role_id = #{roleId} 
				<if test="userId != null">
					and msg_id in (select msg_id from msg_contractor where user_id = #{userId})
				</if>
				) as main
	</select>
</mapper>