<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdin.dzzwsyb.swzzbdbxt.web.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.gdin.dzzwsyb.swzzbdbxt.web.model.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="userdesc" jdbcType="VARCHAR" property="userdesc" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="permission_id" jdbcType="BIGINT" property="permissionId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="role_id" jdbcType="BIGINT" property="roleId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, username, password, userdesc, state, permission_id, create_time,
		role_id
	</sql>
	<select id="selectByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.User">
		insert into user (id, username, password,
		userdesc, state, permission_id,
		create_time, role_id)
		values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userdesc,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{permissionId,jdbcType=BIGINT},
		#{createTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userdesc != null">
				userdesc,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="permissionId != null">
				permission_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userdesc != null">
				#{userdesc,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.UserExample"
		resultType="java.lang.Long">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.userdesc != null">
				userdesc = #{record.userdesc,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
			<if test="record.permissionId != null">
				permission_id = #{record.permissionId,jdbcType=BIGINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.roleId != null">
				role_id = #{record.roleId,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=BIGINT},
		username = #{record.username,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		userdesc = #{record.userdesc,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=INTEGER},
		permission_id = #{record.permissionId,jdbcType=BIGINT},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		role_id = #{record.roleId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.User">
		update user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userdesc != null">
				userdesc = #{userdesc,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				permission_id = #{permissionId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.User">
		update user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		userdesc = #{userdesc,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		permission_id = #{permissionId,jdbcType=BIGINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		role_id = #{roleId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 用户登录验证查询 -->
	<select id="authentication" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where username = #{record.username,jdbcType=VARCHAR} and
		password =
		#{record.password,jdbcType=VARCHAR}
	</select>
	<!-- 分页条件查询 -->
	<select id="selectByExampleAndPage" resultMap="BaseResultMap"
		parameterType="com.gdin.dzzwsyb.swzzbdbxt.web.model.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
</mapper>